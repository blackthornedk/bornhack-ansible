---
- name: Copy vhost http configs
  become: yes
  template:
    src=http-vhost.conf.j2
    dest="/usr/local/etc/nginx/vhosts/{{ item.value.hostnames[0] }}-http.conf"
  with_dict: "{{ vhosts }}"

- name: Reload nginx configs
  become: yes
  service: name=nginx state=reloaded

- name: Create letsencrypt certificate for vhosts
  become: yes
  command: "/usr/local/bin/letsencrypt certonly --email {{ letsencrypt_email }} -a webroot --webroot-path=/tmp/letsencrypt-auto --text --rsa-key-size 4096 {% for hostname in item.value.hostnames %}-d {{ hostname }} {% endfor %}"
  args:
    creates: "/usr/local/etc/letsencrypt/live/{{ item.value.hostnames[0] }}/fullchain.pem"
  with_dict: "{{ vhosts }}"

- name: check certificate ages
  become: yes
  stat: path=/usr/local/etc/letsencrypt/live/{{ item.value.hostnames[0] }}/fullchain.pem
  register: certificates_status
  with_dict: "{{ vhosts }}"

- name: Renew the letsencrypt certificate for {{ item.0.value.hostnames }} (when it is older than 60 days)
  become: yes
  command: "/usr/local/bin/letsencrypt certonly --renew --email {{ letsencrypt_email }} -a webroot --webroot-path=/tmp/letsencrypt-auto --text --rsa-key-size 4096 {% for hostname in item.0.value.hostnames %}-d {{ hostname }} {% endfor %}"
  when: ansible_date_time.epoch|float - item.1.stat.mtime > 60*60*24*60
  with_together:
    - "{{ vhosts }}"
    - "{{ certificates_status.results }}"

- name: Copy vhost https configs
  become: yes
  template:
    src=https-vhost.conf.j2
    dest="/usr/local/etc/nginx/vhosts/{{ item.value.hostnames[0] }}-https.conf"
  with_dict: "{{ vhosts }}"

- name: Move missing dhparam files into place
  command: "/usr/local/bin/installdhparam {{ dhparamgen_path }} /usr/local/etc/nginx/certificates/{{ item.value.hostnames[0] }}-dhparam.pem"
  args:
    creates: "/usr/local/etc/nginx/certificates/{{ item.value.hostnames[0] }}-dhparam.pem"
  become: yes
  with_dict: "{{ vhosts }}"

- name: Reload nginx config
  become: yes
  service: name=nginx state=reloaded
